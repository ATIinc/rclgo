/*
This file is part of rclgo

Copyright Â© 2021 Technology Innovation Institute, United Arab Emirates

Licensed under the Apache License, Version 2.0 (the "License");
	http://www.apache.org/licenses/LICENSE-2.0
*/

/*
THIS FILE IS AUTOGENERATED BY 'rclgo-gen generate'
*/

package test_msgs_msg
import (
	"unsafe"

	"github.com/tiiuae/rclgo/pkg/ros2/ros2types"
	"github.com/tiiuae/rclgo/pkg/ros2/ros2_type_dispatcher"
	rosidl_runtime_c "github.com/tiiuae/rclgo/pkg/ros2/rosidl_runtime_c"
	
)
/*
#cgo LDFLAGS: -L/opt/ros/foxy/lib -Wl,-rpath=/opt/ros/foxy/lib -lrcl -lrosidl_runtime_c -lrosidl_typesupport_c -lrcutils -lrmw_implementation
#cgo LDFLAGS: -ltest_msgs__rosidl_typesupport_c -ltest_msgs__rosidl_generator_c

#cgo CFLAGS: -I/opt/ros/foxy/include

#include <rosidl_runtime_c/message_type_support_struct.h>

#include <test_msgs/msg/strings.h>

*/
import "C"

func init() {
	ros2_type_dispatcher.RegisterROS2MsgTypeNameAlias("test_msgs/Strings", &Strings{})
}
const (
	Strings_STRING_CONST rosidl_runtime_c.String = "Hello world!"
)

// Do not create instances of this type directly. Always use NewStrings
// function instead.
type Strings struct {
	StringValue rosidl_runtime_c.String `yaml:"string_value"`
	StringValueDefault1 rosidl_runtime_c.String `yaml:"string_value_default1"`
	StringValueDefault2 rosidl_runtime_c.String `yaml:"string_value_default2"`
	StringValueDefault3 rosidl_runtime_c.String `yaml:"string_value_default3"`
	StringValueDefault4 rosidl_runtime_c.String `yaml:"string_value_default4"`
	StringValueDefault5 rosidl_runtime_c.String `yaml:"string_value_default5"`
	BoundedStringValue rosidl_runtime_c.String `yaml:"bounded_string_value"`
	BoundedStringValueDefault1 rosidl_runtime_c.String `yaml:"bounded_string_value_default1"`
	BoundedStringValueDefault2 rosidl_runtime_c.String `yaml:"bounded_string_value_default2"`
	BoundedStringValueDefault3 rosidl_runtime_c.String `yaml:"bounded_string_value_default3"`
	BoundedStringValueDefault4 rosidl_runtime_c.String `yaml:"bounded_string_value_default4"`
	BoundedStringValueDefault5 rosidl_runtime_c.String `yaml:"bounded_string_value_default5"`
}

// NewStrings creates a new Strings with default values.
func NewStrings() *Strings {
	self := Strings{}
	self.SetDefaults(nil)
	return &self
}

func (t *Strings) SetDefaults(d interface{}) ros2types.ROS2Msg {
	t.StringValue.SetDefaults("")
	t.StringValueDefault1.SetDefaults("Hello world!")
	t.StringValueDefault2.SetDefaults("Hello'world!")
	t.StringValueDefault3.SetDefaults("Hello\"world!")
	t.StringValueDefault4.SetDefaults("Hello'world!")
	t.StringValueDefault5.SetDefaults("Hello\"world!")
	t.BoundedStringValue.SetDefaults("")
	t.BoundedStringValueDefault1.SetDefaults("Hello world!")
	t.BoundedStringValueDefault2.SetDefaults("Hello'world!")
	t.BoundedStringValueDefault3.SetDefaults("Hello\"world!")
	t.BoundedStringValueDefault4.SetDefaults("Hello'world!")
	t.BoundedStringValueDefault5.SetDefaults("Hello\"world!")
	
	return t
}

func (t *Strings) TypeSupport() unsafe.Pointer {
	return unsafe.Pointer(C.rosidl_typesupport_c__get_message_type_support_handle__test_msgs__msg__Strings())
}
func (t *Strings) PrepareMemory() unsafe.Pointer { //returns *C.test_msgs__msg__Strings
	return (unsafe.Pointer)(C.test_msgs__msg__Strings__create())
}
func (t *Strings) ReleaseMemory(pointer_to_free unsafe.Pointer) {
	C.test_msgs__msg__Strings__destroy((*C.test_msgs__msg__Strings)(pointer_to_free))
}
func (t *Strings) AsCStruct() unsafe.Pointer {
	mem := (*C.test_msgs__msg__Strings)(t.PrepareMemory())
	mem.string_value = *(*C.rosidl_runtime_c__String)(t.StringValue.AsCStruct())
	mem.string_value_default1 = *(*C.rosidl_runtime_c__String)(t.StringValueDefault1.AsCStruct())
	mem.string_value_default2 = *(*C.rosidl_runtime_c__String)(t.StringValueDefault2.AsCStruct())
	mem.string_value_default3 = *(*C.rosidl_runtime_c__String)(t.StringValueDefault3.AsCStruct())
	mem.string_value_default4 = *(*C.rosidl_runtime_c__String)(t.StringValueDefault4.AsCStruct())
	mem.string_value_default5 = *(*C.rosidl_runtime_c__String)(t.StringValueDefault5.AsCStruct())
	mem.bounded_string_value = *(*C.rosidl_runtime_c__String)(t.BoundedStringValue.AsCStruct())
	mem.bounded_string_value_default1 = *(*C.rosidl_runtime_c__String)(t.BoundedStringValueDefault1.AsCStruct())
	mem.bounded_string_value_default2 = *(*C.rosidl_runtime_c__String)(t.BoundedStringValueDefault2.AsCStruct())
	mem.bounded_string_value_default3 = *(*C.rosidl_runtime_c__String)(t.BoundedStringValueDefault3.AsCStruct())
	mem.bounded_string_value_default4 = *(*C.rosidl_runtime_c__String)(t.BoundedStringValueDefault4.AsCStruct())
	mem.bounded_string_value_default5 = *(*C.rosidl_runtime_c__String)(t.BoundedStringValueDefault5.AsCStruct())
	return unsafe.Pointer(mem)
}
func (t *Strings) AsGoStruct(ros2_message_buffer unsafe.Pointer) {
	mem := (*C.test_msgs__msg__Strings)(ros2_message_buffer)
	t.StringValue.AsGoStruct(unsafe.Pointer(&mem.string_value))
	t.StringValueDefault1.AsGoStruct(unsafe.Pointer(&mem.string_value_default1))
	t.StringValueDefault2.AsGoStruct(unsafe.Pointer(&mem.string_value_default2))
	t.StringValueDefault3.AsGoStruct(unsafe.Pointer(&mem.string_value_default3))
	t.StringValueDefault4.AsGoStruct(unsafe.Pointer(&mem.string_value_default4))
	t.StringValueDefault5.AsGoStruct(unsafe.Pointer(&mem.string_value_default5))
	t.BoundedStringValue.AsGoStruct(unsafe.Pointer(&mem.bounded_string_value))
	t.BoundedStringValueDefault1.AsGoStruct(unsafe.Pointer(&mem.bounded_string_value_default1))
	t.BoundedStringValueDefault2.AsGoStruct(unsafe.Pointer(&mem.bounded_string_value_default2))
	t.BoundedStringValueDefault3.AsGoStruct(unsafe.Pointer(&mem.bounded_string_value_default3))
	t.BoundedStringValueDefault4.AsGoStruct(unsafe.Pointer(&mem.bounded_string_value_default4))
	t.BoundedStringValueDefault5.AsGoStruct(unsafe.Pointer(&mem.bounded_string_value_default5))
}
func (t *Strings) Clone() ros2types.ROS2Msg {
	clone := *t
	return &clone
}

type CStrings = C.test_msgs__msg__Strings
type CStrings__Sequence = C.test_msgs__msg__Strings__Sequence

func Strings__Sequence_to_Go(goSlice *[]Strings, cSlice CStrings__Sequence) {
	if cSlice.size == 0 {
		return
	}
	*goSlice = make([]Strings, int64(cSlice.size))
	for i := 0; i < int(cSlice.size); i++ {
		cIdx := (*C.test_msgs__msg__Strings__Sequence)(unsafe.Pointer(
			uintptr(unsafe.Pointer(cSlice.data)) + (C.sizeof_struct_test_msgs__msg__Strings * uintptr(i)),
		))
		(*goSlice)[i] = Strings{}
		(*goSlice)[i].AsGoStruct(unsafe.Pointer(cIdx))
	}
}
func Strings__Sequence_to_C(cSlice *CStrings__Sequence, goSlice []Strings) {
	if len(goSlice) == 0 {
		return
	}
	cSlice.data = (*C.test_msgs__msg__Strings)(C.malloc((C.size_t)(C.sizeof_struct_test_msgs__msg__Strings * uintptr(len(goSlice)))))
	cSlice.capacity = C.size_t(len(goSlice))
	cSlice.size = cSlice.capacity

	for i, v := range goSlice {
		cIdx := (*C.test_msgs__msg__Strings)(unsafe.Pointer(
			uintptr(unsafe.Pointer(cSlice.data)) + (C.sizeof_struct_test_msgs__msg__Strings * uintptr(i)),
		))
		*cIdx = *(*C.test_msgs__msg__Strings)(v.AsCStruct())
	}
}
func Strings__Array_to_Go(goSlice []Strings, cSlice []CStrings) {
	for i := 0; i < len(cSlice); i++ {
		goSlice[i].AsGoStruct(unsafe.Pointer(&cSlice[i]))
	}
}
func Strings__Array_to_C(cSlice []CStrings, goSlice []Strings) {
	for i := 0; i < len(goSlice); i++ {
		cSlice[i] = *(*C.test_msgs__msg__Strings)(goSlice[i].AsCStruct())
	}
}


