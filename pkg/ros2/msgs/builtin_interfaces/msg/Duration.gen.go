/*
This file is part of rclgo

Copyright Â© 2021 Technology Innovation Institute, United Arab Emirates

Licensed under the Apache License, Version 2.0 (the "License");
	http://www.apache.org/licenses/LICENSE-2.0
*/

/*
THIS FILE IS AUTOGENERATED BY 'rclgo-gen generate'
*/

package builtin_interfaces_msg
import (
	"unsafe"

	"github.com/tiiuae/rclgo/pkg/ros2/ros2types"
	"github.com/tiiuae/rclgo/pkg/ros2/ros2_type_dispatcher"
	
)
/*
#cgo LDFLAGS: -L/opt/ros/foxy/lib -Wl,-rpath=/opt/ros/foxy/lib -lrcl -lrosidl_runtime_c -lrosidl_typesupport_c -lrcutils -lrmw_implementation
#cgo LDFLAGS: -lbuiltin_interfaces__rosidl_typesupport_c -lbuiltin_interfaces__rosidl_generator_c

#cgo CFLAGS: -I/opt/ros/foxy/include

#include <rosidl_runtime_c/message_type_support_struct.h>

#include <builtin_interfaces/msg/duration.h>

*/
import "C"

func init() {
	ros2_type_dispatcher.RegisterROS2MsgTypeNameAlias("builtin_interfaces/Duration", &Duration{})
}

// Do not create instances of this type directly. Always use NewDuration
// function instead.
type Duration struct {
	Sec int32 `yaml:"sec"`// Seconds component, range is valid over any possible int32 value.
	Nanosec uint32 `yaml:"nanosec"`// Nanoseconds component in the range of [0, 10e9).
}

// NewDuration creates a new Duration with default values.
func NewDuration() *Duration {
	self := Duration{}
	self.SetDefaults(nil)
	return &self
}

func (t *Duration) SetDefaults(d interface{}) ros2types.ROS2Msg {
	
	return t
}

func (t *Duration) TypeSupport() unsafe.Pointer {
	return unsafe.Pointer(C.rosidl_typesupport_c__get_message_type_support_handle__builtin_interfaces__msg__Duration())
}
func (t *Duration) PrepareMemory() unsafe.Pointer { //returns *C.builtin_interfaces__msg__Duration
	return (unsafe.Pointer)(C.builtin_interfaces__msg__Duration__create())
}
func (t *Duration) ReleaseMemory(pointer_to_free unsafe.Pointer) {
	C.builtin_interfaces__msg__Duration__destroy((*C.builtin_interfaces__msg__Duration)(pointer_to_free))
}
func (t *Duration) AsCStruct() unsafe.Pointer {
	mem := (*C.builtin_interfaces__msg__Duration)(t.PrepareMemory())
	mem.sec = C.int32_t(t.Sec)
	mem.nanosec = C.uint32_t(t.Nanosec)
	return unsafe.Pointer(mem)
}
func (t *Duration) AsGoStruct(ros2_message_buffer unsafe.Pointer) {
	mem := (*C.builtin_interfaces__msg__Duration)(ros2_message_buffer)
	t.Sec = int32(mem.sec)
	t.Nanosec = uint32(mem.nanosec)
}
func (t *Duration) Clone() ros2types.ROS2Msg {
	clone := *t
	return &clone
}

type CDuration = C.builtin_interfaces__msg__Duration
type CDuration__Sequence = C.builtin_interfaces__msg__Duration__Sequence

func Duration__Sequence_to_Go(goSlice *[]Duration, cSlice CDuration__Sequence) {
	if cSlice.size == 0 {
		return
	}
	*goSlice = make([]Duration, int64(cSlice.size))
	for i := 0; i < int(cSlice.size); i++ {
		cIdx := (*C.builtin_interfaces__msg__Duration__Sequence)(unsafe.Pointer(
			uintptr(unsafe.Pointer(cSlice.data)) + (C.sizeof_struct_builtin_interfaces__msg__Duration * uintptr(i)),
		))
		(*goSlice)[i] = Duration{}
		(*goSlice)[i].AsGoStruct(unsafe.Pointer(cIdx))
	}
}
func Duration__Sequence_to_C(cSlice *CDuration__Sequence, goSlice []Duration) {
	if len(goSlice) == 0 {
		return
	}
	cSlice.data = (*C.builtin_interfaces__msg__Duration)(C.malloc((C.size_t)(C.sizeof_struct_builtin_interfaces__msg__Duration * uintptr(len(goSlice)))))
	cSlice.capacity = C.size_t(len(goSlice))
	cSlice.size = cSlice.capacity

	for i, v := range goSlice {
		cIdx := (*C.builtin_interfaces__msg__Duration)(unsafe.Pointer(
			uintptr(unsafe.Pointer(cSlice.data)) + (C.sizeof_struct_builtin_interfaces__msg__Duration * uintptr(i)),
		))
		*cIdx = *(*C.builtin_interfaces__msg__Duration)(v.AsCStruct())
	}
}
func Duration__Array_to_Go(goSlice []Duration, cSlice []CDuration) {
	for i := 0; i < len(cSlice); i++ {
		goSlice[i].AsGoStruct(unsafe.Pointer(&cSlice[i]))
	}
}
func Duration__Array_to_C(cSlice []CDuration, goSlice []Duration) {
	for i := 0; i < len(goSlice); i++ {
		cSlice[i] = *(*C.builtin_interfaces__msg__Duration)(goSlice[i].AsCStruct())
	}
}


