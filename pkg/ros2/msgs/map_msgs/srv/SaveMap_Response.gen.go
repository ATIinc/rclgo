/*
This file is part of rclgo

Copyright Â© 2021 Technology Innovation Institute, United Arab Emirates

Licensed under the Apache License, Version 2.0 (the "License");
	http://www.apache.org/licenses/LICENSE-2.0
*/

/*
THIS FILE IS AUTOGENERATED BY 'rclgo-gen generate'
*/

package map_msgs_srv
import (
	"unsafe"

	"github.com/tiiuae/rclgo/pkg/ros2/ros2types"
	"github.com/tiiuae/rclgo/pkg/ros2/ros2_type_dispatcher"
	
)
/*
#cgo LDFLAGS: -L/opt/ros/foxy/lib -Wl,-rpath=/opt/ros/foxy/lib -lrcl -lrosidl_runtime_c -lrosidl_typesupport_c -lrcutils -lrmw_implementation
#cgo LDFLAGS: -lmap_msgs__rosidl_typesupport_c -lmap_msgs__rosidl_generator_c

#cgo CFLAGS: -I/opt/ros/foxy/include

#include <rosidl_runtime_c/message_type_support_struct.h>

#include <map_msgs/srv/save_map.h>

*/
import "C"

func init() {
	ros2_type_dispatcher.RegisterROS2MsgTypeNameAlias("map_msgs/SaveMap_Response", &SaveMap_Response{})
}

// Do not create instances of this type directly. Always use NewSaveMap_Response
// function instead.
type SaveMap_Response struct {
}

// NewSaveMap_Response creates a new SaveMap_Response with default values.
func NewSaveMap_Response() *SaveMap_Response {
	self := SaveMap_Response{}
	self.SetDefaults(nil)
	return &self
}

func (t *SaveMap_Response) SetDefaults(d interface{}) ros2types.ROS2Msg {
	
	return t
}

func (t *SaveMap_Response) TypeSupport() unsafe.Pointer {
	return unsafe.Pointer(C.rosidl_typesupport_c__get_message_type_support_handle__map_msgs__srv__SaveMap_Response())
}
func (t *SaveMap_Response) PrepareMemory() unsafe.Pointer { //returns *C.map_msgs__srv__SaveMap_Response
	return (unsafe.Pointer)(C.map_msgs__srv__SaveMap_Response__create())
}
func (t *SaveMap_Response) ReleaseMemory(pointer_to_free unsafe.Pointer) {
	C.map_msgs__srv__SaveMap_Response__destroy((*C.map_msgs__srv__SaveMap_Response)(pointer_to_free))
}
func (t *SaveMap_Response) AsCStruct() unsafe.Pointer {
	mem := (*C.map_msgs__srv__SaveMap_Response)(t.PrepareMemory())
	return unsafe.Pointer(mem)
}
func (t *SaveMap_Response) AsGoStruct(ros2_message_buffer unsafe.Pointer) {
	
}
func (t *SaveMap_Response) Clone() ros2types.ROS2Msg {
	clone := *t
	return &clone
}

type CSaveMap_Response = C.map_msgs__srv__SaveMap_Response
type CSaveMap_Response__Sequence = C.map_msgs__srv__SaveMap_Response__Sequence

func SaveMap_Response__Sequence_to_Go(goSlice *[]SaveMap_Response, cSlice CSaveMap_Response__Sequence) {
	if cSlice.size == 0 {
		return
	}
	*goSlice = make([]SaveMap_Response, int64(cSlice.size))
	for i := 0; i < int(cSlice.size); i++ {
		cIdx := (*C.map_msgs__srv__SaveMap_Response__Sequence)(unsafe.Pointer(
			uintptr(unsafe.Pointer(cSlice.data)) + (C.sizeof_struct_map_msgs__srv__SaveMap_Response * uintptr(i)),
		))
		(*goSlice)[i] = SaveMap_Response{}
		(*goSlice)[i].AsGoStruct(unsafe.Pointer(cIdx))
	}
}
func SaveMap_Response__Sequence_to_C(cSlice *CSaveMap_Response__Sequence, goSlice []SaveMap_Response) {
	if len(goSlice) == 0 {
		return
	}
	cSlice.data = (*C.map_msgs__srv__SaveMap_Response)(C.malloc((C.size_t)(C.sizeof_struct_map_msgs__srv__SaveMap_Response * uintptr(len(goSlice)))))
	cSlice.capacity = C.size_t(len(goSlice))
	cSlice.size = cSlice.capacity

	for i, v := range goSlice {
		cIdx := (*C.map_msgs__srv__SaveMap_Response)(unsafe.Pointer(
			uintptr(unsafe.Pointer(cSlice.data)) + (C.sizeof_struct_map_msgs__srv__SaveMap_Response * uintptr(i)),
		))
		*cIdx = *(*C.map_msgs__srv__SaveMap_Response)(v.AsCStruct())
	}
}
func SaveMap_Response__Array_to_Go(goSlice []SaveMap_Response, cSlice []CSaveMap_Response) {
	for i := 0; i < len(cSlice); i++ {
		goSlice[i].AsGoStruct(unsafe.Pointer(&cSlice[i]))
	}
}
func SaveMap_Response__Array_to_C(cSlice []CSaveMap_Response, goSlice []SaveMap_Response) {
	for i := 0; i < len(goSlice); i++ {
		cSlice[i] = *(*C.map_msgs__srv__SaveMap_Response)(goSlice[i].AsCStruct())
	}
}


