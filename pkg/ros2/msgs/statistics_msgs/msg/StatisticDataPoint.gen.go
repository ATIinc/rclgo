/*
This file is part of rclgo

Copyright Â© 2021 Technology Innovation Institute, United Arab Emirates

Licensed under the Apache License, Version 2.0 (the "License");
	http://www.apache.org/licenses/LICENSE-2.0
*/

/*
THIS FILE IS AUTOGENERATED BY 'rclgo-gen generate'
*/

package statistics_msgs
import (
	"unsafe"

	"github.com/tiiuae/rclgo/pkg/ros2/ros2types"
	"github.com/tiiuae/rclgo/pkg/ros2/ros2_type_dispatcher"
	
)
/*
#cgo LDFLAGS: -L/opt/ros/foxy/lib -Wl,-rpath=/opt/ros/foxy/lib -lrcl -lrosidl_runtime_c -lrosidl_typesupport_c -lrcutils -lrmw_implementation
#cgo LDFLAGS: -lstatistics_msgs__rosidl_typesupport_c -lstatistics_msgs__rosidl_generator_c

#cgo CFLAGS: -I/opt/ros/foxy/include

#include <rosidl_runtime_c/message_type_support_struct.h>
#include <statistics_msgs/msg/statistic_data_point.h>
*/
import "C"

func init() {
	ros2_type_dispatcher.RegisterROS2MsgTypeNameAlias("statistics_msgs/StatisticDataPoint", &StatisticDataPoint{})
}

// Do not create instances of this type directly. Always use NewStatisticDataPoint
// function instead.
type StatisticDataPoint struct {
	DataType uint8 `yaml:"data_type"`// The statistic type of this data point, defined in StatisticDataType.msgDefault value should be StatisticDataType.STATISTICS_DATA_TYPE_UNINITIALIZED (0).
	Data float64 `yaml:"data"`// The value of the data point
}

// NewStatisticDataPoint creates a new StatisticDataPoint with default values.
func NewStatisticDataPoint() *StatisticDataPoint {
	self := StatisticDataPoint{}
	self.SetDefaults(nil)
	return &self
}

func (t *StatisticDataPoint) SetDefaults(d interface{}) ros2types.ROS2Msg {
	
	return t
}

func (t *StatisticDataPoint) TypeSupport() unsafe.Pointer {
	return unsafe.Pointer(C.rosidl_typesupport_c__get_message_type_support_handle__statistics_msgs__msg__StatisticDataPoint())
}
func (t *StatisticDataPoint) PrepareMemory() unsafe.Pointer { //returns *C.statistics_msgs__msg__StatisticDataPoint
	return (unsafe.Pointer)(C.statistics_msgs__msg__StatisticDataPoint__create())
}
func (t *StatisticDataPoint) ReleaseMemory(pointer_to_free unsafe.Pointer) {
	C.statistics_msgs__msg__StatisticDataPoint__destroy((*C.statistics_msgs__msg__StatisticDataPoint)(pointer_to_free))
}
func (t *StatisticDataPoint) AsCStruct() unsafe.Pointer {
	mem := (*C.statistics_msgs__msg__StatisticDataPoint)(t.PrepareMemory())
	mem.data_type = C.uint8_t(t.DataType)
	mem.data = C.double(t.Data)
	return unsafe.Pointer(mem)
}
func (t *StatisticDataPoint) AsGoStruct(ros2_message_buffer unsafe.Pointer) {
	mem := (*C.statistics_msgs__msg__StatisticDataPoint)(ros2_message_buffer)
	t.DataType = uint8(mem.data_type)
	t.Data = float64(mem.data)
}
func (t *StatisticDataPoint) Clone() ros2types.ROS2Msg {
	clone := *t
	return &clone
}

type CStatisticDataPoint = C.statistics_msgs__msg__StatisticDataPoint
type CStatisticDataPoint__Sequence = C.statistics_msgs__msg__StatisticDataPoint__Sequence

func StatisticDataPoint__Sequence_to_Go(goSlice *[]StatisticDataPoint, cSlice CStatisticDataPoint__Sequence) {
	if cSlice.size == 0 {
		return
	}
	*goSlice = make([]StatisticDataPoint, int64(cSlice.size))
	for i := 0; i < int(cSlice.size); i++ {
		cIdx := (*C.statistics_msgs__msg__StatisticDataPoint__Sequence)(unsafe.Pointer(
			uintptr(unsafe.Pointer(cSlice.data)) + (C.sizeof_struct_statistics_msgs__msg__StatisticDataPoint * uintptr(i)),
		))
		(*goSlice)[i] = StatisticDataPoint{}
		(*goSlice)[i].AsGoStruct(unsafe.Pointer(cIdx))
	}
}
func StatisticDataPoint__Sequence_to_C(cSlice *CStatisticDataPoint__Sequence, goSlice []StatisticDataPoint) {
	if len(goSlice) == 0 {
		return
	}
	cSlice.data = (*C.statistics_msgs__msg__StatisticDataPoint)(C.malloc((C.size_t)(C.sizeof_struct_statistics_msgs__msg__StatisticDataPoint * uintptr(len(goSlice)))))
	cSlice.capacity = C.size_t(len(goSlice))
	cSlice.size = cSlice.capacity

	for i, v := range goSlice {
		cIdx := (*C.statistics_msgs__msg__StatisticDataPoint)(unsafe.Pointer(
			uintptr(unsafe.Pointer(cSlice.data)) + (C.sizeof_struct_statistics_msgs__msg__StatisticDataPoint * uintptr(i)),
		))
		*cIdx = *(*C.statistics_msgs__msg__StatisticDataPoint)(v.AsCStruct())
	}
}
func StatisticDataPoint__Array_to_Go(goSlice []StatisticDataPoint, cSlice []CStatisticDataPoint) {
	for i := 0; i < len(cSlice); i++ {
		goSlice[i].AsGoStruct(unsafe.Pointer(&cSlice[i]))
	}
}
func StatisticDataPoint__Array_to_C(cSlice []CStatisticDataPoint, goSlice []StatisticDataPoint) {
	for i := 0; i < len(goSlice); i++ {
		cSlice[i] = *(*C.statistics_msgs__msg__StatisticDataPoint)(goSlice[i].AsCStruct())
	}
}


