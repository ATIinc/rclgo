/*
This file is part of rclgo

Copyright Â© 2021 Technology Innovation Institute, United Arab Emirates

Licensed under the Apache License, Version 2.0 (the "License");
	http://www.apache.org/licenses/LICENSE-2.0
*/

/*
THIS FILE IS AUTOGENERATED BY 'rclgo-gen generate'
*/

package rcl_interfaces
import (
	"unsafe"

	"github.com/tiiuae/rclgo/pkg/ros2/ros2types"
	"github.com/tiiuae/rclgo/pkg/ros2/ros2_type_dispatcher"
	builtin_interfaces "github.com/tiiuae/rclgo/pkg/ros2/msgs/builtin_interfaces/msg"
	rosidl_runtime_c "github.com/tiiuae/rclgo/pkg/ros2/rosidl_runtime_c"
	
)
/*
#cgo LDFLAGS: -L/opt/ros/foxy/lib -Wl,-rpath=/opt/ros/foxy/lib -lrcl -lrosidl_runtime_c -lrosidl_typesupport_c -lrcutils -lrmw_implementation
#cgo LDFLAGS: -lrcl_interfaces__rosidl_typesupport_c -lrcl_interfaces__rosidl_generator_c
#cgo LDFLAGS: -lbuiltin_interfaces__rosidl_typesupport_c -lbuiltin_interfaces__rosidl_generator_c

#cgo CFLAGS: -I/opt/ros/foxy/include

#include <rosidl_runtime_c/message_type_support_struct.h>
#include <rcl_interfaces/msg/parameter_event.h>
*/
import "C"

func init() {
	ros2_type_dispatcher.RegisterROS2MsgTypeNameAlias("rcl_interfaces/ParameterEvent", &ParameterEvent{})
}

// Do not create instances of this type directly. Always use NewParameterEvent
// function instead.
type ParameterEvent struct {
	Stamp builtin_interfaces.Time `yaml:"stamp"`// The time stamp when this parameter event occurred.
	Node rosidl_runtime_c.String `yaml:"node"`// Fully qualified ROS path to node.
	NewParameters []Parameter `yaml:"new_parameters"`// New parameters that have been set for this node.
	ChangedParameters []Parameter `yaml:"changed_parameters"`// Parameters that have been changed during this event.
	DeletedParameters []Parameter `yaml:"deleted_parameters"`// Parameters that have been deleted during this event.
}

// NewParameterEvent creates a new ParameterEvent with default values.
func NewParameterEvent() *ParameterEvent {
	self := ParameterEvent{}
	self.SetDefaults(nil)
	return &self
}

func (t *ParameterEvent) SetDefaults(d interface{}) ros2types.ROS2Msg {
	t.Stamp.SetDefaults(nil)
	t.Node.SetDefaults("")
	
	return t
}

func (t *ParameterEvent) TypeSupport() unsafe.Pointer {
	return unsafe.Pointer(C.rosidl_typesupport_c__get_message_type_support_handle__rcl_interfaces__msg__ParameterEvent())
}
func (t *ParameterEvent) PrepareMemory() unsafe.Pointer { //returns *C.rcl_interfaces__msg__ParameterEvent
	return (unsafe.Pointer)(C.rcl_interfaces__msg__ParameterEvent__create())
}
func (t *ParameterEvent) ReleaseMemory(pointer_to_free unsafe.Pointer) {
	C.rcl_interfaces__msg__ParameterEvent__destroy((*C.rcl_interfaces__msg__ParameterEvent)(pointer_to_free))
}
func (t *ParameterEvent) AsCStruct() unsafe.Pointer {
	mem := (*C.rcl_interfaces__msg__ParameterEvent)(t.PrepareMemory())
	mem.stamp = *(*C.builtin_interfaces__msg__Time)(t.Stamp.AsCStruct())
	mem.node = *(*C.rosidl_runtime_c__String)(t.Node.AsCStruct())
	Parameter__Sequence_to_C(&mem.new_parameters, t.NewParameters)
	Parameter__Sequence_to_C(&mem.changed_parameters, t.ChangedParameters)
	Parameter__Sequence_to_C(&mem.deleted_parameters, t.DeletedParameters)
	return unsafe.Pointer(mem)
}
func (t *ParameterEvent) AsGoStruct(ros2_message_buffer unsafe.Pointer) {
	mem := (*C.rcl_interfaces__msg__ParameterEvent)(ros2_message_buffer)
	t.Stamp.AsGoStruct(unsafe.Pointer(&mem.stamp))
	t.Node.AsGoStruct(unsafe.Pointer(&mem.node))
	Parameter__Sequence_to_Go(&t.NewParameters, mem.new_parameters)
	Parameter__Sequence_to_Go(&t.ChangedParameters, mem.changed_parameters)
	Parameter__Sequence_to_Go(&t.DeletedParameters, mem.deleted_parameters)
}
func (t *ParameterEvent) Clone() ros2types.ROS2Msg {
	clone := *t
	return &clone
}

type CParameterEvent = C.rcl_interfaces__msg__ParameterEvent
type CParameterEvent__Sequence = C.rcl_interfaces__msg__ParameterEvent__Sequence

func ParameterEvent__Sequence_to_Go(goSlice *[]ParameterEvent, cSlice CParameterEvent__Sequence) {
	if cSlice.size == 0 {
		return
	}
	*goSlice = make([]ParameterEvent, int64(cSlice.size))
	for i := 0; i < int(cSlice.size); i++ {
		cIdx := (*C.rcl_interfaces__msg__ParameterEvent__Sequence)(unsafe.Pointer(
			uintptr(unsafe.Pointer(cSlice.data)) + (C.sizeof_struct_rcl_interfaces__msg__ParameterEvent * uintptr(i)),
		))
		(*goSlice)[i] = ParameterEvent{}
		(*goSlice)[i].AsGoStruct(unsafe.Pointer(cIdx))
	}
}
func ParameterEvent__Sequence_to_C(cSlice *CParameterEvent__Sequence, goSlice []ParameterEvent) {
	if len(goSlice) == 0 {
		return
	}
	cSlice.data = (*C.rcl_interfaces__msg__ParameterEvent)(C.malloc((C.size_t)(C.sizeof_struct_rcl_interfaces__msg__ParameterEvent * uintptr(len(goSlice)))))
	cSlice.capacity = C.size_t(len(goSlice))
	cSlice.size = cSlice.capacity

	for i, v := range goSlice {
		cIdx := (*C.rcl_interfaces__msg__ParameterEvent)(unsafe.Pointer(
			uintptr(unsafe.Pointer(cSlice.data)) + (C.sizeof_struct_rcl_interfaces__msg__ParameterEvent * uintptr(i)),
		))
		*cIdx = *(*C.rcl_interfaces__msg__ParameterEvent)(v.AsCStruct())
	}
}
func ParameterEvent__Array_to_Go(goSlice []ParameterEvent, cSlice []CParameterEvent) {
	for i := 0; i < len(cSlice); i++ {
		goSlice[i].AsGoStruct(unsafe.Pointer(&cSlice[i]))
	}
}
func ParameterEvent__Array_to_C(cSlice []CParameterEvent, goSlice []ParameterEvent) {
	for i := 0; i < len(goSlice); i++ {
		cSlice[i] = *(*C.rcl_interfaces__msg__ParameterEvent)(goSlice[i].AsCStruct())
	}
}


