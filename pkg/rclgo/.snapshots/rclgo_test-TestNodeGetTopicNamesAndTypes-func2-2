(rclgo_test.obj) (len=2) {
  (string) (len=11) "description": (string) (len=22) "node1 in empty network",
  (string) (len=5) "value": (rclgo_test.obj) (len=2) {
    (string) (len=3) "err": (interface {}) <nil>,
    (string) (len=13) "namesAndTypes": (map[string][]string) (len=1) {
      (string) (len=7) "/rosout": ([]string) (len=1) {
        (string) (len=22) "rcl_interfaces/msg/Log"
      }
    }
  }
}
(rclgo_test.obj) (len=2) {
  (string) (len=11) "description": (string) (len=22) "node2 in empty network",
  (string) (len=5) "value": (rclgo_test.obj) (len=2) {
    (string) (len=3) "err": (interface {}) <nil>,
    (string) (len=13) "namesAndTypes": (map[string][]string) (len=1) {
      (string) (len=7) "/rosout": ([]string) (len=1) {
        (string) (len=22) "rcl_interfaces/msg/Log"
      }
    }
  }
}
(rclgo_test.obj) (len=2) {
  (string) (len=11) "description": (string) (len=19) "new publisher error",
  (string) (len=5) "value": (interface {}) <nil>
}
(rclgo_test.obj) (len=2) {
  (string) (len=11) "description": (string) (len=21) "node1 after publisher",
  (string) (len=5) "value": (rclgo_test.obj) (len=2) {
    (string) (len=3) "err": (interface {}) <nil>,
    (string) (len=13) "namesAndTypes": (map[string][]string) (len=2) {
      (string) (len=7) "/rosout": ([]string) (len=1) {
        (string) (len=22) "rcl_interfaces/msg/Log"
      },
      (string) (len=38) "/topic_names_and_types_test/test_topic": ([]string) (len=1) {
        (string) (len=17) "std_msgs/msg/Bool"
      }
    }
  }
}
(rclgo_test.obj) (len=2) {
  (string) (len=11) "description": (string) (len=21) "node2 after publisher",
  (string) (len=5) "value": (rclgo_test.obj) (len=2) {
    (string) (len=3) "err": (interface {}) <nil>,
    (string) (len=13) "namesAndTypes": (map[string][]string) (len=1) {
      (string) (len=7) "/rosout": ([]string) (len=1) {
        (string) (len=22) "rcl_interfaces/msg/Log"
      }
    }
  }
}
(rclgo_test.obj) (len=2) {
  (string) (len=11) "description": (string) (len=23) "new int publisher error",
  (string) (len=5) "value": (interface {}) <nil>
}
(rclgo_test.obj) (len=2) {
  (string) (len=11) "description": (string) (len=34) "node1 after creating int publisher",
  (string) (len=5) "value": (rclgo_test.obj) (len=2) {
    (string) (len=3) "err": (interface {}) <nil>,
    (string) (len=13) "namesAndTypes": (map[string][]string) (len=3) {
      (string) (len=7) "/rosout": ([]string) (len=1) {
        (string) (len=22) "rcl_interfaces/msg/Log"
      },
      (string) (len=38) "/topic_names_and_types_test/test_topic": ([]string) (len=1) {
        (string) (len=17) "std_msgs/msg/Bool"
      },
      (string) (len=39) "/topic_names_and_types_test/test_topic2": ([]string) (len=1) {
        (string) (len=18) "std_msgs/msg/Int64"
      }
    }
  }
}
(rclgo_test.obj) (len=2) {
  (string) (len=11) "description": (string) (len=34) "node2 after creating int publisher",
  (string) (len=5) "value": (rclgo_test.obj) (len=2) {
    (string) (len=3) "err": (interface {}) <nil>,
    (string) (len=13) "namesAndTypes": (map[string][]string) (len=1) {
      (string) (len=7) "/rosout": ([]string) (len=1) {
        (string) (len=22) "rcl_interfaces/msg/Log"
      }
    }
  }
}
(rclgo_test.obj) (len=2) {
  (string) (len=11) "description": (string) (len=28) "publish int error from node1",
  (string) (len=5) "value": (interface {}) <nil>
}
(rclgo_test.obj) (len=2) {
  (string) (len=11) "description": (string) (len=26) "node1 after publishing int",
  (string) (len=5) "value": (rclgo_test.obj) (len=2) {
    (string) (len=3) "err": (interface {}) <nil>,
    (string) (len=13) "namesAndTypes": (map[string][]string) (len=3) {
      (string) (len=7) "/rosout": ([]string) (len=1) {
        (string) (len=22) "rcl_interfaces/msg/Log"
      },
      (string) (len=38) "/topic_names_and_types_test/test_topic": ([]string) (len=1) {
        (string) (len=17) "std_msgs/msg/Bool"
      },
      (string) (len=39) "/topic_names_and_types_test/test_topic2": ([]string) (len=1) {
        (string) (len=18) "std_msgs/msg/Int64"
      }
    }
  }
}
(rclgo_test.obj) (len=2) {
  (string) (len=11) "description": (string) (len=26) "node2 after publishing int",
  (string) (len=5) "value": (rclgo_test.obj) (len=2) {
    (string) (len=3) "err": (interface {}) <nil>,
    (string) (len=13) "namesAndTypes": (map[string][]string) (len=1) {
      (string) (len=7) "/rosout": ([]string) (len=1) {
        (string) (len=22) "rcl_interfaces/msg/Log"
      }
    }
  }
}
(rclgo_test.obj) (len=2) {
  (string) (len=11) "description": (string) (len=22) "second publisher error",
  (string) (len=5) "value": (interface {}) <nil>
}
(rclgo_test.obj) (len=2) {
  (string) (len=11) "description": (string) (len=28) "node1 after second publisher",
  (string) (len=5) "value": (rclgo_test.obj) (len=2) {
    (string) (len=3) "err": (interface {}) <nil>,
    (string) (len=13) "namesAndTypes": (map[string][]string) (len=3) {
      (string) (len=7) "/rosout": ([]string) (len=1) {
        (string) (len=22) "rcl_interfaces/msg/Log"
      },
      (string) (len=38) "/topic_names_and_types_test/test_topic": ([]string) (len=2) {
        (string) (len=17) "std_msgs/msg/Bool",
        (string) (len=19) "std_msgs/msg/String"
      },
      (string) (len=39) "/topic_names_and_types_test/test_topic2": ([]string) (len=1) {
        (string) (len=18) "std_msgs/msg/Int64"
      }
    }
  }
}
(rclgo_test.obj) (len=2) {
  (string) (len=11) "description": (string) (len=28) "node2 after second publisher",
  (string) (len=5) "value": (rclgo_test.obj) (len=2) {
    (string) (len=3) "err": (interface {}) <nil>,
    (string) (len=13) "namesAndTypes": (map[string][]string) (len=2) {
      (string) (len=7) "/rosout": ([]string) (len=1) {
        (string) (len=22) "rcl_interfaces/msg/Log"
      },
      (string) (len=38) "/topic_names_and_types_test/test_topic": ([]string) (len=1) {
        (string) (len=19) "std_msgs/msg/String"
      }
    }
  }
}
